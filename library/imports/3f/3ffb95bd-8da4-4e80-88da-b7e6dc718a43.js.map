{"version":3,"sources":["..\\..\\..\\..\\assets\\Script/assets\\Script\\MODMain.js"],"names":["o0","require","o0CC","o0Game","cc","Class","extends","Component","properties","canvas","default","type","Canvas","onLoad","director","getPhysicsManager","enabled","setDisplayStats","debugDrawFlags","PhysicsManager","DrawBits","e_aabbBit","e_pairBit","e_centerOfMassBit","e_jointBit","e_shapeBit","start","gameScene","node","addComponent","update","dt"],"mappings":";;;;;;AACA,IAAIA,KAAKC,QAAQ,IAAR,CAAT;AACA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;AACA,IAAIE,SAASF,QAAQ,QAAR,CAAb;;AAEAG,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,gBAAQ;AACJC,qBAAS,IADL;AAEJC,kBAAMP,GAAGQ;AAFL;AADA,KAHP;;AAULC,YAAO,kBAAU;;AAEbT,WAAGU,QAAH,CAAYC,iBAAZ,GAAgCC,OAAhC,GAA0C,IAA1C,CAFa,CAEkC;AAC/C;;AAEAZ,WAAGU,QAAH,CAAYG,eAAZ,CAA4B,KAA5B,EALa,CAKsB;;AAEnC;AACA;;;AAGAb,WAAGU,QAAH,CAAYC,iBAAZ,GAAgCG,cAAhC,GAAiDd,GAAGe,cAAH,CAAkBC,QAAlB,CAA2BC,SAA3B,GACjDjB,GAAGe,cAAH,CAAkBC,QAAlB,CAA2BE,SADsB,GAEjDlB,GAAGe,cAAH,CAAkBC,QAAlB,CAA2BG,iBAFsB,GAGjDnB,GAAGe,cAAH,CAAkBC,QAAlB,CAA2BI,UAHsB,GAIjDpB,GAAGe,cAAH,CAAkBC,QAAlB,CAA2BK,UAJ3B,CAXa,CAeyB;AACtC;AACH,KA3BI;;AA6BL;AACAC,WAAO,iBAAY;;AAGf;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA,YAAIC,YAAY,KAAKC,IAAL,CAAUC,YAAV,CAAuB,eAAvB,CAAhB;AACA;AAEH,KA9CI;;AAgDL;AACAC,YAAQ,gBAAUC,EAAV,EAAc;AAClB;AACA;;;AAGH;AAtDI,CAAT","file":"MODMain.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["\nvar o0 = require('o0');\nvar o0CC = require('o0CC');\nvar o0Game = require('o0Game');\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        canvas: {\n            default: null,\n            type: cc.Canvas\n        },\n    },\n\n    onLoad:function(){\n\n        cc.director.getPhysicsManager().enabled = true;//初始化物理必须在onload里面 开启物理引擎/** */\n        //cc.director.getCollisionManager().enabled = true;\n\n        cc.director.setDisplayStats(false);//关闭左下角debug窗口\n\n        //cc.director.getCollisionManager().enabledDebugDraw  = true;\n        //o0CC.log('dsa');\n\n        \n        cc.director.getPhysicsManager().debugDrawFlags = cc.PhysicsManager.DrawBits.e_aabbBit |\n        cc.PhysicsManager.DrawBits.e_pairBit |\n        cc.PhysicsManager.DrawBits.e_centerOfMassBit |\n        cc.PhysicsManager.DrawBits.e_jointBit |\n        cc.PhysicsManager.DrawBits.e_shapeBit;/** */\n        /*cc.director.getPhysicsManager().debugDrawFlags = cc.PhysicsManager.DrawBits.e_aabbBit;/** */\n    },\n\n    // use this for initialization\n    start: function () {\n\n\n        //this.gameNode = o0CC.addNode(null,0);\n        //this.gameCamera = this.UINode.addComponent(cc.Camera);\n        //this.gameCamera.addTarget(this.gameNode);\n        //cc.director.getPhysicsManager().attachDebugDrawToCamera(this.gameCamera);\n        //cc.director.getCollisionManager().attachDebugDrawToCamera(this.gameCamera);\n\n\n        //this.canvas.node.x = 0;\n        //this.canvas.node.y = 0;\n\n        var gameScene = this.node.addComponent('MODRemoteGame');\n        //var gameScene = o0CC.addNode(this.UINode,0,'MODGame').getComponent('MODGame');\n\n    },\n\n    // called every frame\n    update: function (dt) {\n        //o0CC.log(471);\n        /*o0CC.log(this.canvas.node.width);\n        this.camera.node.x = this.canvas.node.x;\n        this.camera.node.y = this.canvas.node.y;/** */\n    }\n});\n\n\n"]}