{"version":3,"sources":["..\\..\\..\\..\\assets\\Script/assets\\Script\\MODRemoteGame.js"],"names":["o0","require","o0CC","o0Game","State","Disconnect","Connect","Waiting","Game","cc","Class","extends","Component","properties","canvas","default","type","Canvas","UIcamera","Camera","UINode","Node","camera","gameNode","map","players","chainsaws","random","connection","remote","initGame","id","self","orderedPlayer","keyToArray","sort","a","b","randomPosition","i","float","addNode","getComponent","playerId","node","setPosition","initPositions","name","push","connectPlayer","host","addComponent","onSendingInput","data","send","AI","onLoad","director","getPhysicsManager","gravity","v2","start","log","addTarget","attachDebugDrawToCamera","getCollisionManager","Connection","active","destroy","onStart","onHostChange","onReceiving","receivingInput","playerData","syncData","chainsawData","Random","update","dt","screen","view","getVisibleSize","scale","height","zoomRatio","state","toData"],"mappings":";;;;;;AACA,IAAIA,KAAKC,QAAQ,IAAR,CAAT;AACA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;AACA,IAAIE,SAASF,QAAQ,QAAR,CAAb;;AAEA,IAAIG,QAAQ;AACRC,gBAAa,CADL;AAERC,aAAU,CAFF;AAGRC,aAAU,CAHF;AAIRC,UAAO;AAJC,CAAZ;;AAOAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,gBAAQ;AACJC,qBAAS,IADL;AAEJC,kBAAMP,GAAGQ;AAFL,SADA;AAKRC,kBAAU;AACNH,qBAAS,IADH;AAENC,kBAAMP,GAAGU;AAFH,SALF;AASRC,gBAAQ;AACJL,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SATA;AAaRC,gBAAQ;AACJP,qBAAS,IADL;AAEJC,kBAAMP,GAAGU;AAFL,SAbA;AAiBRI,kBAAU;AACNR,qBAAS,IADH;AAENC,kBAAMP,GAAGY;AAFH,SAjBF;AAqBRG,aAAI,IArBI;AAsBRC,iBAAQ,IAtBA;AAuBRC,mBAAU,EAvBF;;AAyBRC,gBAAO,IAzBC;;AA4BRC,oBAAW,IA5BH;;AA8BRC,gBAAO,KA9BC,CA8BK;AA9BL,KAHP;AAmCLC,YAnCK,oBAmCIH,MAnCJ,EAmCYF,OAnCZ,EAmCqBM,EAnCrB,EAmCwB;AACzB,YAAIC,OAAO,IAAX;;AAEA,YAAIC,gBAAgBjC,GAAGkC,UAAH,CAAcT,OAAd,CAApB;AACAQ,sBAAcE,IAAd,CAAmB,UAASC,CAAT,EAAWC,CAAX,EAAa;AAAE,mBAAOD,IAAIC,CAAX;AAAc,SAAhD;;AAEA,YAAIC,iBAAiB,EAArB;AACA,aAAI,IAAIC,IAAG,CAAX,EAAaA,IAAE,CAAf,EAAiB,EAAEA,CAAnB,EAAqB;AACjBD,2BAAeC,CAAf,IAAoBA,CAApB;AACH;AACDD,uBAAeH,IAAf,CAAoB,YAAU;AAAE,mBAAO,MAAMR,OAAOa,KAAP,EAAb;AAA6B,SAA7D;;AAEAR,aAAKR,GAAL,GAAWtB,KAAKuC,OAAL,CAAaT,KAAKT,QAAlB,EAA2B,CAA3B,EAA6B,WAA7B,EAA0CmB,YAA1C,CAAuD,WAAvD,CAAX;AACA,aAAI,IAAIH,CAAR,IAAaN,aAAb,EAA2B;AACvB,gBAAIU,WAAWV,cAAcM,CAAd,CAAf;AACAP,iBAAKP,OAAL,CAAakB,QAAb,IAAyBzC,KAAKuC,OAAL,CAAaT,KAAKT,QAAlB,EAA2B,CAA3B,EAA6B,cAA7B,EAA6CmB,YAA7C,CAA0D,cAA1D,CAAzB;AACAV,iBAAKP,OAAL,CAAakB,QAAb,EAAuBC,IAAvB,CAA4BC,WAA5B,CAAwCb,KAAKR,GAAL,CAASsB,aAAT,CAAuBR,eAAeC,CAAf,CAAvB,CAAxC;AACAP,iBAAKP,OAAL,CAAakB,QAAb,EAAuBI,IAAvB,GAA8BJ,QAA9B;AACAX,iBAAKP,OAAL,CAAakB,QAAb,EAAuBC,IAAvB,CAA4BG,IAA5B,GAAmCJ,QAAnC;AACAX,iBAAKN,SAAL,CAAesB,IAAf,CAAoB9C,KAAKuC,OAAL,CAAaT,KAAKT,QAAlB,EAA2B,CAA3B,EAA6B,aAA7B,EAA4CmB,YAA5C,CAAyD,aAAzD,CAApB;AACAV,iBAAKN,SAAL,CAAea,CAAf,EAAkBK,IAAlB,CAAuBC,WAAvB,CAAmCb,KAAKR,GAAL,CAASsB,aAAT,CAAuBR,eAAeC,CAAf,CAAvB,CAAnC;AACAP,iBAAKN,SAAL,CAAea,CAAf,EAAkBU,aAAlB,CAAgCjB,KAAKP,OAAL,CAAakB,QAAb,CAAhC;AACAX,iBAAKN,SAAL,CAAea,CAAf,EAAkBQ,IAAlB,GAAyB,cAAYR,CAArC;AACAP,iBAAKN,SAAL,CAAea,CAAf,EAAkBf,GAAlB,GAAwBQ,KAAKR,GAA7B;AACAQ,iBAAKN,SAAL,CAAea,CAAf,EAAkBW,IAAlB,GAAyB,CAAC,KAAKrB,MAAN,IAAgBG,KAAKJ,UAAL,CAAgBsB,IAAzD;AACH;AACD,aAAI,IAAIX,CAAR,IAAaN,aAAb,EAA2B;AACvBD,iBAAKN,SAAL,CAAea,CAAf,EAAkBd,OAAlB,GAA4BO,KAAKP,OAAjC;AACH;AACDO,aAAKP,OAAL,CAAaM,EAAb,EAAiBoB,YAAjB,CAA8B,oBAA9B;AACAnB,aAAKP,OAAL,CAAaM,EAAb,EAAiBoB,YAAjB,CAA8B,iBAA9B,EAAiD/B,MAAjD,GAA0DY,KAAKZ,MAA/D;AACA,YAAG,KAAKS,MAAR,EAAe;AACXG,iBAAKP,OAAL,CAAaM,EAAb,EAAiBqB,cAAjB,GAAkC,UAASC,IAAT,EAAc;AAC5CrB,qBAAKJ,UAAL,CAAgB0B,IAAhB,CAAqB,EAAC,SAAQD,IAAT,EAArB;AACH,aAFD,CADW,CAGV;AACJ;AACD,aAAI,IAAId,CAAR,IAAaP,KAAKP,OAAlB,EAA0B;AACtB,gBAAGA,QAAQc,CAAR,KAAc,KAAjB,EAAuB;AACnB,oBAAIgB,KAAKvB,KAAKP,OAAL,CAAac,CAAb,EAAgBY,YAAhB,CAA6B,0BAA7B,CAAT;AACAI,mBAAG/B,GAAH,GAAS,KAAKA,GAAd;AACA+B,mBAAG9B,OAAH,GAAa,KAAKA,OAAlB;AACA8B,mBAAG7B,SAAH,GAAe,KAAKA,SAApB;AACH;AACJ;AACJ,KA/EI;;AAgFL;AACA8B,YAAQ,kBAAY;AAChB;AACA/C,WAAGgD,QAAH,CAAYC,iBAAZ,GAAgCC,OAAhC,GAA0ClD,GAAGmD,EAAH,CAAM,CAAN,EAAS,CAAC,IAAV,CAA1C,CAFgB,CAE0C;AAE7D,KArFI;AAsFL;AACAC,WAAO,iBAAY;AACf,YAAI7B,OAAO,IAAX;;AAEA,YAAG,KAAKlB,MAAL,IAAe,IAAlB,EAAuB;AACnB,iBAAKA,MAAL,GAAc,KAAK8B,IAAL,CAAUF,YAAV,CAAuBjC,GAAGQ,MAA1B,CAAd;AACA,gBAAG,KAAKH,MAAL,IAAe,IAAlB,EAAuB;AACnBZ,qBAAK4D,GAAL,CAAS,aAAT;AACH;AACJ;AACD,aAAKvC,QAAL,GAAgBrB,KAAKuC,OAAL,CAAa,KAAK3B,MAAL,CAAY8B,IAAzB,EAA8B,CAA9B,CAAhB;AACA,aAAKtB,MAAL,GAAc,KAAKC,QAAL,CAAc4B,YAAd,CAA2B1C,GAAGU,MAA9B,CAAd;AACA,aAAKG,MAAL,CAAYyC,SAAZ,CAAsB,KAAKxC,QAA3B;AACA,aAAKH,MAAL,GAAclB,KAAKuC,OAAL,CAAa,KAAK3B,MAAL,CAAY8B,IAAzB,EAA8B,CAA9B,CAAd;AACA;AACA;AACA;AACAnC,WAAGgD,QAAH,CAAYC,iBAAZ,GAAgCM,uBAAhC,CAAwD,KAAK1C,MAA7D;AACAb,WAAGgD,QAAH,CAAYQ,mBAAZ,GAAkCD,uBAAlC,CAA0D,KAAK1C,MAA/D,EAjBe,CAiBwD;;AAGvE,aAAKG,OAAL,GAAe,EAAf,CApBe,CAoBG;;AAElB,YAAG,KAAKI,MAAR,EAAe;AACX,iBAAKD,UAAL,GAAkB,IAAIzB,OAAO+D,UAAX,CAAsB,YAAU;AAC9ClC,qBAAKJ,UAAL,GAAkB,IAAlB;AACA,oBAAGI,KAAKY,IAAL,IAAW,IAAX,IAAmBZ,KAAKY,IAAL,CAAUuB,MAAV,IAAoB,IAA1C,EAA+C;AAC3CnC,yBAAKY,IAAL,CAAUuB,MAAV,GAAmB,KAAnB;AACAnC,yBAAKY,IAAL,CAAUwB,OAAV;AACAlE,yBAAK4D,GAAL,CAAS,kBAAT;AACH;AACJ,aAPiB,CAAlB;AAQA,iBAAKlC,UAAL,CAAgByC,OAAhB,GAA0B,YAAU;AAChCrC,qBAAKF,QAAL,CAAc,KAAKH,MAAnB,EAA0B,KAAKF,OAA/B,EAAuC,KAAKM,EAA5C;AAChB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8Ba,aAhCD;AAiCA,iBAAKH,UAAL,CAAgB0C,YAAhB,GAA+B,UAASpB,IAAT,EAAc;AACzC,qBAAI,IAAIX,CAAR,IAAaP,KAAKN,SAAlB,EAA4B;AACxBM,yBAAKN,SAAL,CAAea,CAAf,EAAkBW,IAAlB,GAAyBA,IAAzB;AACH;AACJ,aAJD;AAKA,iBAAKtB,UAAL,CAAgB2C,WAAhB,GAA8B,UAASxC,EAAT,EAAYsB,IAAZ,EAAiB;AAC3C,oBAAGA,KAAK,OAAL,KAAe,IAAf,IAAuBrB,KAAKP,OAAL,CAAaM,EAAb,KAAkB,IAA5C,EAAiD;AAC7CC,yBAAKP,OAAL,CAAaM,EAAb,EAAiByC,cAAjB,CAAgCnB,KAAK,OAAL,CAAhC;AACH;AACD,oBAAIoB,aAAapB,KAAK,QAAL,CAAjB;AACA,oBAAGoB,cAAY,IAAZ,IAAoBzC,KAAKP,OAAL,CAAaM,EAAb,KAAkB,IAAzC,EAA8C;AAC1C,yBAAI,IAAIQ,CAAR,IAAakC,UAAb,EAAwB;AACpB,4BAAGlC,KAAKP,KAAKJ,UAAL,CAAgBG,EAAxB,EAA2B;AACvB;AACH;AACDC,6BAAKP,OAAL,CAAac,CAAb,EAAgBmC,QAAhB,CAAyBD,WAAWlC,CAAX,CAAzB;AACH;AACJ;AACD,oBAAIoC,eAAetB,KAAK,UAAL,CAAnB;AACA,oBAAGsB,gBAAc,IAAd,IAAsB3C,KAAKJ,UAAL,CAAgBsB,IAAhB,IAAsB,IAA/C,EAAoD;AAChD,yBAAI,IAAIX,CAAR,IAAaP,KAAKN,SAAlB,EAA4B;AACxB;AACAM,6BAAKN,SAAL,CAAea,CAAf,EAAkBmC,QAAlB,CAA2BC,aAAapC,CAAb,CAA3B;AACH;AACJ;AACJ,aApBD;AAqBH,SApED,MAoEK;AACDP,iBAAKF,QAAL,CAAc,IAAI9B,GAAG4E,MAAP,EAAd,EAA8B,EAAC,YAAW,IAAZ,EAAiB,YAAW,KAA5B,EAAkC,YAAW,KAA7C,EAAmD,YAAW,KAA9D,EAA9B,EAAmG,UAAnG;AACH;;AAMD;AACA;;AAGH,KA7LI;;AA+LL;AACAC,YAAQ,gBAAUC,EAAV,EAAc;AAClB,YAAIC,SAAStE,GAAGuE,IAAH,CAAQC,cAAR,EAAb;AACA,YAAIC,QAAQH,OAAOI,MAAP,GAAgB,MAA5B;AACA;AACA,aAAK7D,MAAL,CAAY8D,SAAZ,GAAwBF,KAAxB,CAJkB,CAIY;AAC9B;AACA;;;AAGA,YAAG,KAAKrD,MAAR,EAAe;AACX,gBAAI,KAAKD,UAAL,CAAgByD,KAAhB,IAAyB,KAAKzD,UAAL,CAAgBxB,KAAhB,CAAsBI,IAAnD,EAAwD;AACpD,oBAAIiE,aAAa,EAAjB;AACA,oBAAIE,eAAe,EAAnB;AACA,oBAAG,KAAK/C,UAAL,CAAgBsB,IAAnB,EAAwB;AACpB,yBAAI,IAAIX,CAAR,IAAa,KAAKd,OAAlB,EAA0B;AACtBgD,mCAAWlC,CAAX,IAAgB,KAAKd,OAAL,CAAac,CAAb,EAAgB+C,MAAhB,EAAhB;AACH;AACD,yBAAI,IAAI/C,CAAR,IAAa,KAAKb,SAAlB,EAA4B;AACxBiD,qCAAapC,CAAb,IAAkB,KAAKb,SAAL,CAAea,CAAf,EAAkB+C,MAAlB,EAAlB;AACH;AACJ,iBAPD,MAOK;AACDb,+BAAW,KAAK7C,UAAL,CAAgBG,EAA3B,IAAiC,KAAKN,OAAL,CAAa,KAAKG,UAAL,CAAgBG,EAA7B,EAAiCuD,MAAjC,EAAjC;AACH;AACD,qBAAK1D,UAAL,CAAgB0B,IAAhB,CAAqB,EAAC,UAASmB,UAAV,EAAqB,YAAWE,YAAhC,EAArB;AACH;AACJ;AACD;AACH;;AA3NI,CAAT","file":"MODRemoteGame.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["\nvar o0 = require('o0');\nvar o0CC = require('o0CC');\nvar o0Game = require('o0Game');\n\nvar State = {\n    Disconnect : 0,\n    Connect : 1,\n    Waiting : 2,\n    Game : 3,\n}\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        canvas: {\n            default: null,\n            type: cc.Canvas\n        },\n        UIcamera: {\n            default: null,\n            type: cc.Camera\n        },\n        UINode: {\n            default: null,\n            type: cc.Node\n        },\n        camera: {\n            default: null,\n            type: cc.Camera\n        },\n        gameNode: {\n            default: null,\n            type: cc.Node\n        },\n        map:null,\n        players:null,\n        chainsaws:[],\n\n        random:null,\n\n\n        connection:null,\n\n        remote:false,//联网游戏\n    },\n    initGame(random, players, id){\n        var self = this;\n\n        var orderedPlayer = o0.keyToArray(players);\n        orderedPlayer.sort(function(a,b){ return a - b });\n\n        var randomPosition = [];\n        for(var i =0;i<4;++i){\n            randomPosition[i] = i;\n        }\n        randomPosition.sort(function(){ return 0.5 - random.float() });\n\n        self.map = o0CC.addNode(self.gameNode,0,'MODMap001').getComponent('MODMap001');\n        for(var i in orderedPlayer){\n            var playerId = orderedPlayer[i];\n            self.players[playerId] = o0CC.addNode(self.gameNode,0,'MODCharacter').getComponent('MODCharacter');\n            self.players[playerId].node.setPosition(self.map.initPositions[randomPosition[i]]);\n            self.players[playerId].name = playerId;\n            self.players[playerId].node.name = playerId;\n            self.chainsaws.push(o0CC.addNode(self.gameNode,0,'MODChainsaw').getComponent('MODChainsaw'));\n            self.chainsaws[i].node.setPosition(self.map.initPositions[randomPosition[i]]);\n            self.chainsaws[i].connectPlayer(self.players[playerId]);\n            self.chainsaws[i].name = 'chainsaw '+i;\n            self.chainsaws[i].map = self.map;\n            self.chainsaws[i].host = !this.remote || self.connection.host;\n        }\n        for(var i in orderedPlayer){\n            self.chainsaws[i].players = self.players;\n        }\n        self.players[id].addComponent('MODKeyboardControl');\n        self.players[id].addComponent('MODTouchControl').UINode = self.UINode;\n        if(this.remote){\n            self.players[id].onSendingInput = function(data){\n                self.connection.send({'input':data});\n            }/** */\n        }\n        for(var i in self.players){\n            if(players[i] == false){\n                var AI = self.players[i].addComponent('MODAIControlModeChainsaw');\n                AI.map = this.map;\n                AI.players = this.players;\n                AI.chainsaws = this.chainsaws;\n            }\n        }\n    },\n    // use this for initialization\n    onLoad: function () {\n        //cc.director.getPhysicsManager().gravity = cc.v2(0, 0);//\n        cc.director.getPhysicsManager().gravity = cc.v2(0, -4000);//\n\n    },\n    // use this for initialization\n    start: function () {\n        var self = this;\n        \n        if(this.canvas == null){\n            this.canvas = this.node.getComponent(cc.Canvas);\n            if(this.canvas == null){\n                o0CC.log('canvas null')\n            }\n        }\n        this.gameNode = o0CC.addNode(this.canvas.node,0);\n        this.camera = this.gameNode.addComponent(cc.Camera);\n        this.camera.addTarget(this.gameNode);\n        this.UINode = o0CC.addNode(this.canvas.node,1);\n        //this.UIcamera = this.UINode.addComponent(cc.Camera);\n        //this.UIcamera.addTarget(this.UINode);\n        //this.camera.addTarget(this.UINode);\n        cc.director.getPhysicsManager().attachDebugDrawToCamera(this.camera);\n        cc.director.getCollisionManager().attachDebugDrawToCamera(this.camera);/** */\n\n\n        this.players = {};//不能在properties里初始化\n\n        if(this.remote){\n            this.connection = new o0Game.Connection(function(){\n                self.connection = null;\n                if(self.node!=null && self.node.active == true){\n                    self.node.active = false;\n                    self.node.destroy();\n                    o0CC.log('connection close');\n                }\n            });\n            this.connection.onStart = function(){\n                self.initGame(this.random,this.players,this.id);\n/*\n                var randomPosition = [];\n                for(var i =0;i<4;++i){\n                    randomPosition[i] = i;\n                }\n                var random = this.random;\n                randomPosition.sort(function(){ return 0.5 - random.float() });\n    \n                self.map = o0CC.addNode(self.gameNode,0,'MODMap001').getComponent('MODMap001');\n                for(var i in this.players){\n                    var playerId = this.players[i];\n                    self.players[playerId] = o0CC.addNode(self.gameNode,0,'MODCharacter').getComponent('MODCharacter');\n                    self.players[playerId].node.setPosition(self.map.initPositions[randomPosition[i]]);\n                    self.players[playerId].name = playerId;\n                    self.players[playerId].node.name = playerId;\n                    self.chainsaws.push(o0CC.addNode(self.gameNode,0,'MODChainsaw').getComponent('MODChainsaw'));\n                    self.chainsaws[i].node.setPosition(self.map.initPositions[randomPosition[i]]);\n                    self.chainsaws[i].connectPlayer(self.players[playerId]);\n                    self.chainsaws[i].name = 'chainsaw '+i;\n                    self.chainsaws[i].map = self.map;\n                    //self.chainsaws[i].host = self.connection.host;\n                }\n                for(var i in this.players){\n                    self.chainsaws[i].players = self.players;\n                }\n                self.players[this.id].addComponent('MODKeyboardControl');\n                self.players[this.id].addComponent('MODTouchControl').UINode = self.UINode;\n                self.players[this.id].onSendingInput = function(data){\n                    self.connection.send({'input':data});\n                }/** */\n            }\n            this.connection.onHostChange = function(host){\n                for(var i in self.chainsaws){\n                    self.chainsaws[i].host = host;\n                }\n            }\n            this.connection.onReceiving = function(id,data){\n                if(data['input']!=null && self.players[id]!=null){\n                    self.players[id].receivingInput(data['input']);\n                }\n                var playerData = data['player'];\n                if(playerData!=null && self.players[id]!=null){\n                    for(var i in playerData){\n                        if(i == self.connection.id){\n                            continue;\n                        }\n                        self.players[i].syncData(playerData[i]);\n                    }\n                }\n                var chainsawData = data['chainsaw'];\n                if(chainsawData!=null && self.connection.host!=true){\n                    for(var i in self.chainsaws){\n                        //cc.log('222222222222222222222');\n                        self.chainsaws[i].syncData(chainsawData[i]);\n                    }\n                }\n            }\n        }else{\n            self.initGame(new o0.Random(),{'Player_0':true,'Player_1':false,'Player_2':false,'Player_3':false},'Player_0');\n        }\n\n\n\n        \n\n        //o0CC.setGroup(this.players[0].getComponent('MODCharacter'),1);\n        //this.players.push(o0CC.addNode(this.gameNode,0,'MODCharacter'));\n\n        \n    },\n\n    // called every frame\n    update: function (dt) {\n        var screen = cc.view.getVisibleSize();\n        var scale = screen.height / 1000.0;\n        //this.camera.zoomRatio = 1;/** */\n        this.camera.zoomRatio = scale;/** */\n        //cc.log(scale);\n        //this.UIcamera.zoomRatio = 1;/** */\n\n        \n        if(this.remote){\n            if (this.connection.state == this.connection.State.Game){\n                var playerData = {};\n                var chainsawData = {};\n                if(this.connection.host){\n                    for(var i in this.players){\n                        playerData[i] = this.players[i].toData();\n                    }\n                    for(var i in this.chainsaws){\n                        chainsawData[i] = this.chainsaws[i].toData();\n                    }\n                }else{\n                    playerData[this.connection.id] = this.players[this.connection.id].toData();\n                }\n                this.connection.send({'player':playerData,'chainsaw':chainsawData});\n            }\n        }\n        //this.send({'test':'test'});\n    },\n\n\n    \n\n});\n\n\n"]}