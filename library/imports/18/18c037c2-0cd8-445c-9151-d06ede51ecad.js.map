{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\Script\\GameElements\\Control/assets\\Script\\GameElements\\Control\\MODKeyboardControl.js"],"names":["o0","require","o0CC","cc","Class","extends","Component","properties","player","keyDirection","key","jumpingKey","onLoad","node","getComponent","log","systemEvent","on","SystemEvent","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","Array","KEY","right","left","d","a","push","up","w","onDestroy","off","updateMotionState","dt","targetVector","_key","setMotionState","event","keyCode","jump"],"mappings":";;;;;;AAAA,IAAIA,KAAKC,QAAQ,IAAR,CAAT;AACA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;;AAGAE,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;AAELC,gBAAY;AACRC,gBAAO,IADC;;AAGRC,sBAAa,IAHL;AAIRC,aAAI,IAJI;AAKRC,oBAAW;AALH,KAFP;AASLC,YAAQ,kBAAY;AAChB,YAAG,KAAKJ,MAAL,IAAe,IAAlB,EAAuB;AACnB,iBAAKA,MAAL,GAAc,KAAKK,IAAL,CAAUC,YAAV,CAAuB,cAAvB,CAAd;AACA,gBAAG,KAAKN,MAAL,IAAe,IAAlB,EAAuB;AACnBN,qBAAKa,GAAL,CAAS,aAAT;AACH;AACJ;;AAIDZ,WAAGa,WAAH,CAAeC,EAAf,CAAkBd,GAAGe,WAAH,CAAeC,SAAf,CAAyBC,QAA3C,EAAqD,KAAKC,SAA1D,EAAqE,IAArE;AACAlB,WAAGa,WAAH,CAAeC,EAAf,CAAkBd,GAAGe,WAAH,CAAeC,SAAf,CAAyBG,MAA3C,EAAmD,KAAKC,OAAxD,EAAiE,IAAjE;;AAEA,aAAKd,YAAL,GAAoB,IAAIe,KAAJ,EAApB;AACA,aAAKf,YAAL,CAAkBN,GAAGsB,GAAH,CAAOC,KAAzB,IAAkC,CAAlC;AACA,aAAKjB,YAAL,CAAkBN,GAAGsB,GAAH,CAAOE,IAAzB,IAAiC,CAAC,CAAlC;AACA,aAAKlB,YAAL,CAAkBN,GAAGsB,GAAH,CAAOG,CAAzB,IAA8B,CAA9B;AACA,aAAKnB,YAAL,CAAkBN,GAAGsB,GAAH,CAAOI,CAAzB,IAA8B,CAAC,CAA/B;AACA,aAAKnB,GAAL,GAAW,IAAIc,KAAJ,EAAX;AACA,aAAKb,UAAL,GAAkB,IAAIa,KAAJ,EAAlB;AACA,aAAKb,UAAL,CAAgBmB,IAAhB,CAAqB3B,GAAGsB,GAAH,CAAOM,EAA5B;AACA,aAAKpB,UAAL,CAAgBmB,IAAhB,CAAqB3B,GAAGsB,GAAH,CAAOO,CAA5B;AACH,KA/BI;AAgCLC,aAhCK,uBAgCQ;AACT9B,WAAGa,WAAH,CAAekB,GAAf,CAAmB/B,GAAGe,WAAH,CAAeC,SAAf,CAAyBC,QAA5C,EAAsD,KAAKC,SAA3D,EAAsE,IAAtE;AACAlB,WAAGa,WAAH,CAAekB,GAAf,CAAmB/B,GAAGe,WAAH,CAAeC,SAAf,CAAyBG,MAA5C,EAAoD,KAAKC,OAAzD,EAAkE,IAAlE;AACH,KAnCI;;AAoCLY,uBAAmB,2BAAUC,EAAV,EAAc;AAC7B,YAAIC,eAAe,CAAnB;AACA,aAAI,IAAIC,IAAR,IAAgB,KAAK7B,YAArB,EAAkC;AAC9B,gBAAG,KAAKC,GAAL,CAAS4B,IAAT,KAAkB,IAArB,EAA0B;AACtBD,gCAAgB,KAAK5B,YAAL,CAAkB6B,IAAlB,CAAhB;AACH;AACJ;AACD,aAAK9B,MAAL,CAAY+B,cAAZ,CAA2BF,YAA3B;AACH,KA5CI;;AA8CLhB,eAAW,mBAAUmB,KAAV,EAAiB;AACxB,YAAG,KAAK/B,YAAL,CAAkB+B,MAAMC,OAAxB,KAAoC,IAAvC,EAA4C;AACxC,iBAAK/B,GAAL,CAAS8B,MAAMC,OAAf,IAA0B,IAA1B;AACA,iBAAKN,iBAAL;AACH;AACD,aAAI,IAAIG,IAAR,IAAgB,KAAK3B,UAArB,EAAgC;AAC5B,gBAAG6B,MAAMC,OAAN,IAAiB,KAAK9B,UAAL,CAAgB2B,IAAhB,CAApB,EAA0C;AACtC,qBAAK9B,MAAL,CAAYkC,IAAZ;AACA;AACH;AACJ;AACJ,KAzDI;AA0DLnB,aAAS,iBAAUiB,KAAV,EAAiB;AACtB,YAAG,KAAK/B,YAAL,CAAkB+B,MAAMC,OAAxB,KAAoC,IAAvC,EAA4C;AACxC,iBAAK/B,GAAL,CAAS8B,MAAMC,OAAf,IAA0B,KAA1B;AACA,iBAAKN,iBAAL;AACH;AACJ;AA/DI,CAAT","file":"MODKeyboardControl.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\Script\\GameElements\\Control","sourcesContent":["var o0 = require('o0');\nvar o0CC = require('o0CC');\n\n\ncc.Class({\n    extends: cc.Component,\n    properties: {\n        player:null,\n\n        keyDirection:null,\n        key:null,\n        jumpingKey:null,\n    },\n    onLoad: function () {        \n        if(this.player == null){\n            this.player = this.node.getComponent('MODCharacter');\n            if(this.player == null){\n                o0CC.log('player null')\n            }\n        }\n\n\n\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n\n        this.keyDirection = new Array();\n        this.keyDirection[cc.KEY.right] = 1;\n        this.keyDirection[cc.KEY.left] = -1;\n        this.keyDirection[cc.KEY.d] = 1;\n        this.keyDirection[cc.KEY.a] = -1;\n        this.key = new Array();\n        this.jumpingKey = new Array();\n        this.jumpingKey.push(cc.KEY.up);\n        this.jumpingKey.push(cc.KEY.w);\n    },\n    onDestroy () {\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n    updateMotionState: function (dt) {\n        var targetVector = 0;\n        for(var _key in this.keyDirection){\n            if(this.key[_key] == true){\n                targetVector += this.keyDirection[_key];\n            }\n        }\n        this.player.setMotionState(targetVector);\n    },\n\n    onKeyDown: function (event) {\n        if(this.keyDirection[event.keyCode] != null){\n            this.key[event.keyCode] = true;\n            this.updateMotionState();\n        }\n        for(var _key in this.jumpingKey){\n            if(event.keyCode == this.jumpingKey[_key]){\n                this.player.jump();\n                break;\n            }\n        }\n    },\n    onKeyUp: function (event) {\n        if(this.keyDirection[event.keyCode] != null){\n            this.key[event.keyCode] = false;\n            this.updateMotionState();\n        }\n    }\n});"]}